{"version":3,"sources":["images/nodeschool.png","components/app/particles-config.js","components/nav/Nav.js","components/app/Page.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","particles","number","value","density","enable","value_area","opacity","random","anim","speed","opacity_min","sync","line_linked","distance","color","width","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","modes","grab","repulse","duration","push","particles_nb","remove","retina_detect","Header","Navbar","className","expand","sticky","Brand","href","alt","src","require","height","Nav","Component","Page","this","props","children","App","params","particlesConfig","Container","Row","style","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,wC,6JCA5B,GACbC,UAAW,CACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,QAAS,CACPJ,MAAO,GACPK,QAAQ,EACRC,KAAM,CACJJ,QAAQ,EACRK,MAAO,EACPC,YAAa,GACbC,MAAM,IAGVC,YAAa,CACXR,QAAQ,EACRS,SAAU,IACVC,MAAO,UACPR,QAAS,GACTS,MAAO,GAETC,KAAM,CACJZ,QAAQ,EACRK,MAAO,EACPQ,UAAW,OACXV,QAAQ,EACRW,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACPjB,QAAQ,EACRkB,QAAS,IACTC,QAAS,QAIfC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACPvB,QAAQ,EACRwB,KAAM,QAERC,QAAS,CACPzB,QAAQ,EACRwB,KAAM,SAGVE,MAAO,CACLC,KAAM,CACJlB,SAAU,IACVD,YAAa,CACXN,QAAS,IAGb0B,QAAS,CACPnB,SAAU,IACVoB,SAAU,IAEZC,KAAM,CACJC,aAAc,GAEhBC,OAAQ,CACND,aAAc,KAIpBE,eAAe,G,wDCjCFC,E,iLAlCX,OACE,kBAACC,EAAA,EAAD,CAAQC,UAAU,6BAA6BC,OAAO,KAAKC,OAAO,OAChE,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAI,GACJC,IAAKC,EAAQ,IACbhC,MAAM,KACNiC,OAAO,KACPR,UAAU,6BAEX,sBAEH,kBAACS,EAAA,EAAD,W,GAdaC,aCWNC,E,iLATX,OACE,oCACE,kBAAC,EAAD,MACCC,KAAKC,MAAMC,c,GALDJ,aCuCJK,MAlCf,WACE,OACE,oCACE,kBAAC,YAAD,CAAWf,UAAU,YAAYgB,OAAQC,IACzC,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKnB,UAAU,6BACb,yBAAKM,IAAKC,EAAQ,IAAgCF,IAAI,MAExD,kBAACc,EAAA,EAAD,CAAKnB,UAAU,6BACb,wBAAIoB,MAAO,CAAE9C,MAAO,UAClB,0BAAM+C,KAAK,MAAMC,aAAW,qBAA5B,gBADF,0DAKE,0BAAMD,KAAK,MAAMC,aAAW,qBAA5B,iBAIF,uBAAGF,MAAO,CAAE9C,MAAO,UAAnB,sBAEE,uBAAG8B,KAAK,qCAAR,kBAFF,0BAIE,0BAAMiB,KAAK,MAAMC,aAAW,gBAA5B,sB,YCnBMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.8c892be1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nodeschool.4db9b2ad.png\";","export default {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    opacity: {\n      value: 0.5,\n      random: false,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false\n      }\n    },\n    line_linked: {\n      enable: true,\n      distance: 150,\n      color: \"#ffffff\",\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200\n      }\n    }\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"grab\"\n      },\n      onclick: {\n        enable: true,\n        mode: \"push\"\n      }\n    },\n    modes: {\n      grab: {\n        distance: 100,\n        line_linked: {\n          opacity: 1\n        }\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      },\n      push: {\n        particles_nb: 4\n      },\n      remove: {\n        particles_nb: 2\n      }\n    }\n  },\n  retina_detect: true\n};\n","import React, { Component } from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Navbar className='justify-content-center nav' expand='lg' sticky='top'>\n        <Navbar.Brand href='#home'>\n          <img\n            alt=''\n            src={require(\"../../images/nodeschool.png\")}\n            width='30'\n            height='30'\n            className='d-inline-block align-top'\n          />\n          {\"NodeSchool Madison\"}\n        </Navbar.Brand>\n        <Nav>\n          {\n            // <Nav.Link href='#home'>Home</Nav.Link>\n            // <Nav.Link href='#link'>Schedule</Nav.Link>\n            //   <NavDropdown title='Dropdown' id='basic-nav-dropdown'>\n            //   <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\n            //   <NavDropdown.Item href='#action/3.2'>\n            //     Another action\n            //   </NavDropdown.Item>\n            //   <NavDropdown.Item href='#action/3.3'>Something</NavDropdown.Item>\n            //   <NavDropdown.Divider />\n            //   <NavDropdown.Item href='#action/3.4'>\n            //     Separated link\n            //   </NavDropdown.Item>\n            // </NavDropdown>\n          }\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Nav from \"../nav/Nav\";\n\nclass Page extends Component {\n  render() {\n    return (\n      <>\n        <Nav />\n        {this.props.children}\n      </>\n    );\n  }\n}\n\nexport default Page;\n","import React from \"react\";\n\nimport { Container, Row } from \"react-bootstrap\";\nimport { Particles } from \"react-particles-js\";\nimport particlesConfig from \"./particles-config\";\n\nimport Page from \"./Page\";\n\nfunction App() {\n  return (\n    <>\n      <Particles className='particles' params={particlesConfig} />\n      <Page>\n        <Container>\n          <Row className='justify-content-md-center'>\n            <img src={require(\"../../images/nodeschool.png\")} alt='' />\n          </Row>\n          <Row className='justify-content-md-center'>\n            <h1 style={{ color: \"white\" }}>\n              <span role='img' aria-label='construction sign'>\n                ðŸš§\n              </span>\n              NodeSchool Madison is currently undergoing renovations!\n              <span role='img' aria-label='construction sign'>\n                ðŸš§\n              </span>\n            </h1>\n            <p style={{ color: \"white\" }}>\n              Feel free to follow\n              <a href='https://twitter.com/NodeschoolMSN'>@nodeschoolmsn</a> on\n              Twitter for updates\n              <span role='img' aria-label='party popper'>\n                ðŸŽ‰\n              </span>\n            </p>\n          </Row>\n        </Container>\n      </Page>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}